import{_ as t,c as e,o as s,ag as n}from"./chunks/framework.S-Qvb3wi.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"version/v0.0.1/core/interceptors/loading-bar.md","filePath":"version/v0.0.1/core/interceptors/loading-bar.md"}'),a={name:"version/v0.0.1/core/interceptors/loading-bar.md"};function r(o,i,l,p,c,g){return s(),e("div",null,i[0]||(i[0]=[n(`<h2 id="loadingbarinterceptor" tabindex="-1">loadingBarInterceptor <a class="header-anchor" href="#loadingbarinterceptor" aria-label="Permalink to &quot;loadingBarInterceptor&quot;">​</a></h2><p><strong>Mô tả</strong>: Interceptor theo dõi số lượng active requests để hiển thị loading state</p><p><strong>Cách sử dụng</strong>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Setup interceptor</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { loadingBarInterceptor } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@cci-web/core&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Trong component hoặc service</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Interceptor tự động log trạng thái, có thể integrate với loading service</span></span></code></pre></div><p><strong>Ưu điểm</strong>:</p><ul><li>Tự động tracking request lifecycle</li><li>Hỗ trợ concurrent requests</li><li>Logging chi tiết cho debugging</li><li>Không cần manual setup cho từng request</li></ul><p><strong>Nhược điểm</strong>:</p><ul><li>Chỉ có logging, cần integrate thêm với UI loading component</li><li>Memory overhead khi có nhiều concurrent requests</li></ul><p><strong>Lưu ý</strong>:</p><ul><li>Tracking theo request key (method + URL + params)</li><li>Count số lượng duplicate requests</li><li>Tự động cleanup khi requests complete</li></ul>`,10)]))}const u=t(a,[["render",r]]);export{d as __pageData,u as default};
