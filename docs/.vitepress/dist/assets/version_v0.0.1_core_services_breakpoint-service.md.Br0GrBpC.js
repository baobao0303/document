import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.S-Qvb3wi.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"version/v0.0.1/core/services/breakpoint-service.md","filePath":"version/v0.0.1/core/services/breakpoint-service.md"}'),t={name:"version/v0.0.1/core/services/breakpoint-service.md"};function p(l,s,r,k,h,o){return e(),a("div",null,s[0]||(s[0]=[n(`<h2 id="breakpointservice" tabindex="-1">BreakpointService <a class="header-anchor" href="#breakpointservice" aria-label="Permalink to &quot;BreakpointService&quot;">​</a></h2><p><strong>Mô tả</strong>: Service theo dõi thay đổi breakpoint cho responsive design</p><p><strong>Cách sử dụng</strong>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { BreakpointService, Breakpoints } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@cci-web/core&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Subscribe to breakpoint changes</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.breakpointService.breakpointsResult$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">breakpoints</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Breakpoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (breakpoints.isPhoneOnly) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Mobile logic</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (breakpoints.isDesktopUp) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Desktop logic</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p><strong>Ưu điểm</strong>:</p><ul><li>Reactive breakpoint detection</li><li>Multiple breakpoint support</li><li>Angular CDK integration</li><li>Distinct until changed optimization</li></ul><p><strong>Nhược điểm</strong>:</p><ul><li>Chỉ support predefined breakpoints</li><li>Memory overhead cho observers</li></ul>`,8)]))}const g=i(t,[["render",p]]);export{d as __pageData,g as default};
